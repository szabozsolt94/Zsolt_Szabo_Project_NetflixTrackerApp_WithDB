@model List<int>

@{
    ViewData["Title"] = "Favorites";
}

<h1>My Favorite Movies</h1>

<div id="favoritesContainer" class="container">
    <!-- Movie cards will be injected here -->
</div>

<script>
    const favoriteIDs = @Html.Raw(Json.Serialize(Model)); // Pass C# list to JS
    const apiBaseUrl = 'http://localhost:62481'; // WebAPI port

    favoriteIDs.forEach(movieId => {
        fetch(`http://localhost:62481/api/NetflixMovies/${movieId}`)
            .then(response => {
                if (!response.ok) throw new Error("Movie not found");
                return response.json();
            })
            .then(movie => {
                const $card = $('<div>', {
                    class: 'card',
                    'data-type': movie.Type.toLowerCase(),
                    'data-movie-id': movie.MovieID
                });

                const $title = $('<h3>').text(`${movie.Title} (${movie.Year})`);

                const $img = $('<img>', {
                    src: movie.Image
                        ? `data:image/jpeg;base64,${movie.Image}`
                        : '/img/moviecardplaceholder.jpg',
                    alt: movie.Title
                });

                const $removeForm = $('<form>', {
                    method: 'post',
                    action: '/Favorites/remove'
                }).append(
                    $('<input>', { type: 'hidden', name: 'movieID', value: movie.MovieID }),
                    $('<input>', { type: 'hidden', name: 'userID', value: '1' }), // or dynamic later
                    $('<button>', { type: 'submit' }).text('Remove')
                );

                $card.append($img, $title, $removeForm);

                $('#favoritesContainer').append($card);
            })
            .catch(err => console.error("Error:", err.message));
    });
</script>
